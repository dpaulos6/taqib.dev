---
interface Props {
  href: string;
  external?: boolean;
  class?: string;
  variant?: 'card' | 'icon' | 'button';
}

const { href, external, class: classNames, variant } = Astro.props;
---

<a
  href={href}
  target={external ? '_blank' : '_self'}
  class={`group rounded-md hover:bg-border focus-visible:bg-border flex border cursor-pointer transition duration-300 focus-visible:ring-offset-2 ${variant === 'card' ? 'flex-col p-4' : variant === 'icon' ? 'p-2 border-none' : 'px-4 py-2 items-center justify-center'} ${classNames}`}
>
  <slot />
  {
    external && variant !== "icon" && (
      <svg
        class='translate-x-2 group-hover:-translate-y-0.5 group-hover:translate-x-3 group-focus-visible:-translate-y-0.5 group-focus-visible:translate-x-3 transition duration-300'
        xmlns='http://www.w3.org/2000/svg'
        width='16'
        height='16'
        viewBox='0 0 24 24'
        fill='none'
        stroke='currentColor'
        stroke-width='2'
        stroke-linecap='round'
        stroke-linejoin='round'
        class='lucide lucide-arrow-up-right'
      >
        <path d='M7 7h10v10' />
        <path d='M7 17 17 7' />
      </svg>
    )
  }
</a>
